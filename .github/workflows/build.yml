name: Build Executables

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Linux Executable
      run: |
        pyinstaller --onefile --name oiva-linux oiva.py
        mkdir -p artifacts
        cp dist/oiva-linux artifacts/

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: all-artifacts
        path: artifacts/

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [64, 32]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        architecture: ${{ matrix.architecture == 32 && 'x86' || 'x64' }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Windows Executable
      run: |
        pyinstaller --onefile --name oiva-${{ matrix.architecture }}bit.exe --hidden-import tzdata oiva.py
        mkdir artifacts
        copy dist\oiva-*.exe artifacts\

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: all-artifacts
        path: artifacts/
        overwrite: true  # 强制覆盖同名 Artifact

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        name: all-artifacts
        path: release-files

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-files/*